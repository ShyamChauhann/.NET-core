@model IEnumerable<CostList>
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@{
    ViewBag.Title = "Cost List";
}
<div class="row">
    <div class=col-3>
        <a asp-controller="cost" asp-action="create" class="btn btn-primary mx-2 my-2">Create New Cost</a>
    </div>
    <div class="col-6 offset-3">
        <form asp-controller="Cost" asp-action="Index" method="get" class="my-2 mx-2">
            <div class="input-group">
                <select class="form-select" id="inputSearch" name="searchby">
                    <option selected value="">Search by...</option>
                    <option value="comment">Comment</option>
                    <option value="category">Category</option>
                </select>
                <input name="searchfor" class="form-control" id="inputSearch" aria-describedby="inputSearchComment" aria-label="Search">
                <button class="btn btn-outline-secondary" type="submit" id="inputSearch">Search</button>
                <a class="btn btn-outline-primary" type="button" asp-controller="cost" asp-action="index">Clear Search</a>
            </div>
        </form>
    </div>
</div>
<table class="table table-dark">
    <thead>
        <tr>
            <th>ID</th>
            @{
                var sortBy = Context.Request.Query["sortby"] == "amount" ? "amountdesc" : "amount";
            }
            <th><a asp-action="index" asp-route-sortby="@sortBy" 
                asp-route-page="@Context.Request.Query["page"]"
                asp-route-searchby="@Context.Request.Query["searchby"]"
                asp-route-searchfor="@Context.Request.Query["searchfor"]">Amount</a></th>
            <th>Category</th>
            <th>Comment</th>
            @{
                sortBy = Context.Request.Query["sortby"] == "paymentmethod" ? "paymentmethoddesc" : "paymentmethod";
            }
            <th><a asp-action="index" asp-route-sortby="@sortBy"
                asp-route-page="@Context.Request.Query["page"]"
                asp-route-searchby="@Context.Request.Query["searchby"]"
                asp-route-searchfor="@Context.Request.Query["searchfor"]">Payment Method</a></th>
            <th colspan="3" class="text-center">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var cost in Model)
        {
            <tr>
                <td>@cost.ID</td>
                <td>@cost.Amount</td>
                <td>@cost.CategoryName</td>
                <td>@cost.Comment</td>
                <td>@cost.PaymentMethod</td>
                <form asp-controller="cost" asp-action="delete" asp-route-id="@cost.ID" method="post">
                <td><a class="btn btn-primary d-block" asp-controller="cost" asp-action="detail" asp-route-id="@cost.ID">View</a></td>
                <td><a class="btn btn-info btn-block d-block" asp-controller="cost" asp-action="update" asp-route-id="@cost.ID">Edit</a></td>
                <td><button class="btn btn-danger btn-block d-block" type="submit">Delete</button></td>
                </form>
            </tr>
        }
    </tbody>
</table>
@Html.PagedListPager((IPagedList) Model, page => Url.Action("Index", new {page = page,
searchfor = @Context.Request.Query["searchfor"],
searchby = @Context.Request.Query["searchby"],
sortby = @Context.Request.Query["sortby"]}),
new X.PagedList.Web.Common.PagedListRenderOptions {
    LiElementClasses = new string[] {"page-item"},
    PageClasses = new string[] { "page-link" }
})
